# push 동작을 할떄 동작하도록
on: push
name: Test and Make Debug APK
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          #          flutter-version: '2.8.0'
          channel: 'stable'

      # google-json test
      - name: Make google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
      # env 파일 생성로직..
      - name: Setting .env
        run: |
          echo "TEMP_GOOGLE_KEY=${{ secrets.TEMP_GOOGLE_KEY}}" >> .env
          cat .env
      - run: flutter pub get
      - run: flutter test

      # apk 작성
      - name: build apk
        run: flutter build apk --debug

      #      - name: Create apk(?)
      #        uses: ncipollo/release-action@v1
      #        with:
      #          artifacts: "build/app/outputs/apk/debug/*.apk"
      #          token: ${{ secrets.TOKEN }}
      #
      #      - name: upload artifacts
      #        uses: actions/upload-artifact@master
      #        with:
      #          name: apk-debug
      #          path: build/app/outputs/apk/debug/app-debug.apk

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{ secrets.ANDROID_FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN}}
          groups: testers
          #          file: build/app/outputs/apk/debug/*.apk
          file: build/app/outputs/apk/debug/app-debug.apk

        # test...
      #      - name: testing..
      #        run: flutter build apk --debug
      #      - name: upload debug artifact to Firebase App Distribution
      #        run: firebase appdistribution:distribute android/app/build/outputs/apk/debug/app-debug.apk
      #        --token ${{secrets.FIREBASE_TOKEN}}
      #        --app ${{secrets.FIREBASE_APP_ID}}
      #        --groups "trusted-testers"
      #        --release-notes "Test server"

      - name: Deploy Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          #          repoToken: ${{ secrets.TOKEN }}
          #          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_TEST_KEY }}
          repoToken: '${{ secrets.TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTERSAMPLEAPP_41C6E }}'
          expires: 7d
          projectId: fluttersampleapp-41c6e
          channelId: preview
          entryPoint: "android"


  #      - run: flutter build apk


  build_ipa:
    name: set environment
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter test

      #      - name : build ipa
      #        run: flutter build ios --debug --no-codesign


      - name: Build iOS App
        run: flutter build ios --debug
#        run: |
#          flutter build ios --no-codesign
#          cd build/ios/iphoneos
#          mkdir Payload
#          cd Payload
#          ln -s ../Runner.app
#          cd ..
#          zip -r app.ipa Payload




  #  beta_apk:
#    name: Upload Android Beta to Firebase App Distribution
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#
#      - name: Download Artifact
#        uses: actions/download-artifact@master
#        with:
#          name: apk-build
#          artifacts: "build/app/outputs/apk/debug/*.apk"
#          token: ${{ secrets.TOKEN }}
#
#      - name: Upload APK
#        uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
#        with:
#          appId: fluttersampleapp-41c6e
#          token: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FLUTTERSAMPLEAPP_41C6E}}
#          group: testers
#          file: app-debug.apk


